name: core-infra

networks:
  proxy:
    name: proxy
    external: true

services:
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: npm
    restart: unless-stopped
    ports:
      - "10.10.1.20:80:80"
      - "10.10.1.20:81:81"
      - "10.10.1.20:443:443"
    volumes:
      - /srv/npm/data:/data
      - /srv/npm/letsencrypt:/etc/letsencrypt
    environment:
      TZ: America/Sao_Paulo
    networks:
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:81 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - com.centurylinklabs.watchtower.enable=true

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    restart: unless-stopped
    environment:
      - CONTAINERS=1
      - INFO=1
      - PING=1
      - VERSION=1
      - POST=0
      - ALLOW_START=1
      - ALLOW_STOP=1
      - ALLOW_RESTARTS=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    command: ["--http-enabled"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /srv/portainer/data:/data:rw
    environment:
      TZ: America/Sao_Paulo
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    environment:
      TZ: America/Sao_Paulo
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
      WATCHTOWER_SCHEDULE: "0 0 5 * * *"
      WATCHTOWER_HTTP_API_METRICS: "true"
      WATCHTOWER_HTTP_API_TOKEN: "${WATCHTOWER_TOKEN:-watchtower-secret}"
      WATCHTOWER_NOTIFICATIONS: "email"
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: "${WATCHTOWER_EMAIL_FROM}"
      WATCHTOWER_NOTIFICATION_EMAIL_TO: "${WATCHTOWER_EMAIL_TO}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: "${WATCHTOWER_EMAIL_SERVER}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: 25
      WATCHTOWER_NOTIFICATION_EMAIL_DELAY: "2"
      WATCHTOWER_NOTIFICATION_EMAIL_SUBJECTTAG: "[Willy]"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  lgtm:
    image: grafana/otel-lgtm:latest
    container_name: lgtm
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASS:-admin}
      GF_ANALYTICS_ENABLED: "false"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: "true"
      GF_ANALYTICS_FEEDBACK_LINKS_ENABLED: "false"
      TZ: America/Sao_Paulo
    volumes:
      - /srv/infra/lgtm/data:/data
    ports:
      - "9090:9090" # Prometheus scrape
      - "3100:3100" # Loki logs
      - "3200:3200" # Tempo traces
    networks:
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
    labels:
      - com.centurylinklabs.watchtower.enable=true

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    restart: unless-stopped
    user: "0:0"
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --disable-reporting
      - /etc/alloy/willy/alloy.hcl
    ports:
      - "1514:1514/tcp" # syslog receiver (Proxmox/VMs)
      - "1514:1514/udp"
    volumes:
      - /:/host:ro,rslave
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/udev:/run/udev:ro
      - ../lgtm:/etc/alloy:ro
    environment:
      - TZ=America/Sao_Paulo
      - WATCHTOWER_TOKEN=${WATCHTOWER_TOKEN:-watchtower-secret}
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  pve-exporter:
    image: prompve/prometheus-pve-exporter:latest
    container_name: pve-exporter
    restart: unless-stopped
    environment:
      - TZ=America/Sao_Paulo
      - PVE_USER=${PVE_USER:-monitoring@pve}
      - PVE_PASSWORD=${PVE_PASSWORD}
      - PVE_VERIFY_SSL=${PVE_VERIFY_SSL:-false}
      - PVE_MODULE=${PVE_MODULE:-default}
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true
